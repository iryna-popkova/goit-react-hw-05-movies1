{"version":3,"file":"static/js/560.fea1a1f0.chunk.js","mappings":"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","sources":["components/loader/loader.styled.js","components/loader/loader.js","components/movieDetails/movieDetailsCard.styled.js","components/movieDetails/movieDetailsCard.js","pages/MovieDetailsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderDiv } from './loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderDiv>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderDiv>\n  );\n};\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const MovieDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 20px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  width: 250px;\n  height: auto;\n  display: block;\n`;\n\nexport const MovieInfoDiv = styled.div`\n  padding: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 20px;\n  margin-bottom: 10px;\n  color: tomato;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n  color: darkblue;\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  font-size: 16px;\n  margin-bottom: 15px;\n  color: blueviolet;\n`;\n\nexport const Genres = styled.p`\n  font-size: 16px;\n  margin-bottom: 15px;\n  color: aquamarine;\n  font-weight: bold;\n`;\n\nexport const GenresList = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const GenresItem = styled.li`\n  font-size: 10px;\n  margin-right: 10px;\n  color: green;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 15px;\n  margin-top: 100px;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  padding: 8px;\n  border-radius: 4px;\n  color: navy;\n  font-weight: bold;\n  &.active {\n    color: purple;\n    font-weight: bold;\n  }\n`;\n\nexport const BackPageLink = styled(Link)`\n  background-color: aqua;\n  color: navy;\n  padding: 10px 20px;\n  border-radius: 10px;\n  text-decoration: none;\n  display: inline-block;\n  margin-top: 20px;\n  margin-left: 30px;\n`;\n","import {\n  BackPageLink,\n  MovieDiv,\n  MovieImg,\n  MovieInfoDiv,\n  MovieTitle,\n  UserScore,\n  Overview,\n  Genres,\n  GenresList,\n  NavList,\n  MovieLink,\n} from './movieDetailsCard.styled';\n\nexport default function MovieDetailsCard({\n  moviePoster,\n  title,\n  name,\n  overview,\n  genres,\n  score,\n  location,\n}) {\n  return (\n    <>\n      <BackPageLink to={location?.from ?? '/'}>Back to movies</BackPageLink>\n      <MovieDiv>\n        <MovieImg\n          src={\n            moviePoster\n              ? `https://image.tmdb.org/t/p/w500${moviePoster}`\n              : 'https://fakeimg.pl/250x400/e6dfb8/999696?text=no+image'\n          }\n          alt=\"Movie Poster\"\n        />\n\n        <MovieInfoDiv>\n          <MovieTitle>{title || name}</MovieTitle>\n          <UserScore>User Score: {Math.round(score)}%</UserScore>\n          <Overview>Overview: {overview}</Overview>\n          <Genres>Genres</Genres>\n          <GenresList>\n            {genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </GenresList>\n          <NavList>\n            <li>\n              <MovieLink to=\"cast\">Cast</MovieLink>\n            </li>\n            <li>\n              <MovieLink to=\"reviews\">Reviews</MovieLink>\n            </li>\n          </NavList>\n        </MovieInfoDiv>\n      </MovieDiv>\n    </>\n  );\n}\n","import { fetchMovieById } from 'components/apiRequest';\nimport MovieDetailsCard from 'components/movieDetails/movieDetailsCard';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/loader/loader';\n\nexport default function MoviesDetailsPage() {\n  const location = useLocation();\n  const params = useParams();\n  const backLinkRef = useRef(location.state);\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const response = await fetchMovieById(params.id);\n        setMovie(response.data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [params.id]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <div>Cannot display any movie. Please try again.</div>}\n      <div>\n        <MovieDetailsCard\n          moviePoster={movie.poster_path}\n          title={movie.title}\n          name={movie.name}\n          overview={movie.overview}\n          genres={movie.genres}\n          score={movie.vote_average}\n          location={backLinkRef.current}\n        />\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["LoaderDiv","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MovieDiv","MovieImg","_templateObject2","MovieInfoDiv","_templateObject3","MovieTitle","_templateObject4","UserScore","_templateObject5","Overview","_templateObject6","Genres","_templateObject7","GenresList","_templateObject8","NavList","_templateObject9","_templateObject10","MovieLink","NavLink","_templateObject11","BackPageLink","Link","_templateObject12","MovieDetailsCard","_ref","_location$from","moviePoster","title","name","overview","genres","score","location","_jsxs","_Fragment","to","from","src","concat","alt","Math","round","map","genre","id","MoviesDetailsPage","useLocation","params","useParams","backLinkRef","useRef","state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieById","sent","data","t0","finish","stop","apply","arguments","poster_path","vote_average","current","Outlet"],"sourceRoot":""}