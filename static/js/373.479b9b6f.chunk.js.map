{"version":3,"file":"static/js/373.479b9b6f.chunk.js","mappings":"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","sources":["components/listOfMovies/ListOfMovies.styled.js","components/listOfMovies/ListOfMovies.js","components/movieSearchForm/movieSearchForm.styled.js","components/movieSearchForm/movieSearchForm.js","pages/SearchMoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  padding: auto;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Movie = styled.li`\n  font-weight: 400;\n  font-size: 20px;\n`;\n","import { ListContainer, MoviesList, Movie } from './ListOfMovies.styled';\nimport { useLocation, Link } from 'react-router-dom';\n\nexport default function ListOfMovies({ movies }) {\n  const location = useLocation();\n  return (\n    <ListContainer>\n      <MoviesList>\n        {movies.map(movie => (\n          <Movie key={movie.id}>\n            <Link state={{ from: location }} to={`/movie/${movie.id}`}>\n              {movie.title}\n            </Link>\n          </Movie>\n        ))}\n      </MoviesList>\n    </ListContainer>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SearchBar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  height: 40px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: white;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  border-radius: 3px;\n  overflow: hidden;\n  border: solid grey;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import {\n  SearchBar,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from 'components/movieSearchForm/movieSearchForm.styled';\nimport { useState } from 'react';\n\nimport { FcSearch } from 'react-icons/fc';\n\nexport default function MoviesSearchForm({ setSearchParams, initialValue }) {\n  const [query, setQuery] = useState('');\n\n  const submitRequest = event => {\n    event.preventDefault();\n    setSearchParams({ query });\n  };\n\n  const addSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <SearchBar>\n      <SearchForm onSubmit={submitRequest}>\n        <SearchFormInput\n          className=\"input\"\n          name=\"searchQueryStr\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Movie name\"\n          defaultValue={initialValue}\n          onChange={addSearchParams}\n        />\n\n        <SearchFormButton type=\"submit\">\n          <FcSearch size={30} />\n        </SearchFormButton>\n      </SearchForm>\n    </SearchBar>\n  );\n}\n","import { fetchSearchMovies } from 'components/apiRequest';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesSearchForm from 'components/movieSearchForm/movieSearchForm';\nimport ListOfMovies from 'components/listOfMovies/ListOfMovies';\nimport { toast } from 'react-hot-toast';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const onSearchMovie = async () => {\n      try {\n        const searchMoviesResponce = await fetchSearchMovies(currentQuery);\n        setMovies(searchMoviesResponce.data.results);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    onSearchMovie();\n  }, [searchParams]);\n\n  return (\n    <>\n      <MoviesSearchForm\n        setSearchParams={setSearchParams}\n        initialValue={searchParams.get('query')}\n      />\n      {movies.length > 0 && <ListOfMovies movies={movies} />}\n    </>\n  );\n}\n"],"names":["ListContainer","styled","_templateObject","_taggedTemplateLiteral","MoviesList","_templateObject2","Movie","_templateObject3","ListOfMovies","_ref","movies","location","useLocation","_jsx","children","map","movie","Link","state","from","to","concat","id","title","SearchBar","SearchForm","SearchFormButton","SearchFormInput","_templateObject4","MoviesSearchForm","setSearchParams","initialValue","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","className","name","type","autoComplete","autoFocus","placeholder","defaultValue","onChange","_ref2","value","target","FcSearch","size","Movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","currentQuery","get","onSearchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","searchMoviesResponce","_context","prev","next","fetchSearchMovies","sent","data","results","t0","toast","stop","apply","arguments","_Fragment","length"],"sourceRoot":""}